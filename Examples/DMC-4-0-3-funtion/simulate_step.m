%==============================================================
% Returns object's output for a given input vector for
% a required discrete moment. If sizes of the input or output
% vector is lower than the required moment the error is thrown.
%
% @param U : input vector
% @param Y : output vector
% @param moment : required moment
% @returns : object's output at the 'moment'th momenht 
%
%==============================================================
function y = simulate_step(U, Y, moment)

    % Throw error when vectors' sizes are not equal
    if moment > size(U,1) || moment > size(Y,1)
        error('Required moment exceeds given vectors sizes!')
    end

    y = zeros(3, 1);   
    if (moment > 4)
        [y(1), y(2), y(3)] = object( ...
            U(moment - 1, 1), U(moment - 2, 1), U(moment - 3, 1), U(moment - 4, 1), ...
            U(moment - 1, 2), U(moment - 2, 2), U(moment - 3, 2), U(moment - 4, 2), ...
            U(moment - 1, 3), U(moment - 2, 3), U(moment - 3, 3), U(moment - 4, 3), ...
            U(moment - 1, 4), U(moment - 2, 4), U(moment - 3, 4), U(moment - 4, 4), ...
            Y(moment - 1, 1), Y(moment - 2, 1), Y(moment - 3, 1), Y(moment - 4, 1), ...
            Y(moment - 1, 2), Y(moment - 2, 2), Y(moment - 3, 2), Y(moment - 4, 2), ...
            Y(moment - 1, 3), Y(moment - 2, 3), Y(moment - 3, 3), Y(moment - 4, 3) ...
        );
    elseif ( moment > 3 )
        [y(1), y(2), y(3)] = object( ...
            U(moment - 1, 1), U(moment - 2, 1), U(moment - 3, 1),           0, ...
            U(moment - 1, 2), U(moment - 2, 2), U(moment - 3, 2),           0, ...
            U(moment - 1, 3), U(moment - 2, 3), U(moment - 3, 3),           0, ...
            U(moment - 1, 4), U(moment - 2, 4), U(moment - 3, 4),           0, ...
            Y(moment - 1, 1), Y(moment - 2, 1), Y(moment - 3, 1),           0, ...
            Y(moment - 1, 2), Y(moment - 2, 2), Y(moment - 3, 2),           0, ...
            Y(moment - 1, 3), Y(moment - 2, 3), Y(moment - 3, 3),           0 ...
        );
    elseif ( moment > 2 )
        [y(1), y(2), y(3)] = object( ...
            U(moment - 1, 1), U(moment - 2, 1),           0,           0, ...
            U(moment - 1, 2), U(moment - 2, 2),           0,           0, ...
            U(moment - 1, 3), U(moment - 2, 3),           0,           0, ...
            U(moment - 1, 4), U(moment - 2, 4),           0,           0, ...
            Y(moment - 1, 1), Y(moment - 2, 1),           0,           0, ...
            Y(moment - 1, 2), Y(moment - 2, 2),           0,           0, ...
            Y(moment - 1, 3), Y(moment - 2, 3),           0,           0 ...
        );
    elseif ( moment > 1 )
        [y(1), y(2), y(3)] = object( ...
            U(moment - 1, 1),           0,           0,           0, ...
            U(moment - 1, 2),           0,           0,           0, ...
            U(moment - 1, 3),           0,           0,           0, ...
            U(moment - 1, 4),           0,           0,           0, ...
            Y(moment - 1, 1),           0,           0,           0, ...
            Y(moment - 1, 2),           0,           0,           0, ...
            Y(moment - 1, 3),           0,           0,           0 ...
        );
    else
        [y(1), y(2), y(3)] = object( ...
                      0,           0,           0,           0, ...
                      0,           0,           0,           0, ...
                      0,           0,           0,           0, ...
                      0,           0,           0,           0, ...
                      0,           0,           0,           0, ...
                      0,           0,           0,           0, ...
                      0,           0,           0,           0 ...
        );
    end

end

